{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,UAC7BC,EAAOC,EAAMC,EAAQC,GAAUN,EAmBtC,SAASO,EAAcC,EAAUC,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBJ,QAAiBC,OAE5CI,EAAK,sBAAoBL,QAAeC,MAAU,GAErD,GAAGA,IAAQ,IAGhBC,EAAQQ,MAAKC,IACXC,EAAAtB,GAASuB,OAAOC,QAAQH,EAAO,IAGjCT,EAAQa,OAAMC,IACZJ,EAAAtB,GAASuB,OAAOI,QAAQD,EAAM,G,CAIlCxB,EAAK0B,iBAAiB,UAvCtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAaC,OAAO3B,EAAM4B,OAC1BC,EAAiBF,OAAO1B,EAAK2B,OAC7BE,EAAYH,OAAOzB,EAAO0B,OAChC,IAAIG,EAAeL,EAEnB,IAAK,IAAIM,EAAI,EAAGA,EAAIF,EAAWE,IAC7B5B,EAAc4B,EAAI,EAAGD,GAErBA,GAAgBF,EAGlBhC,EAAKoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst [delay, step, amount, button] = form;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const firstDelay = Number(delay.value); \n  const delayIncrement = Number(step.value);\n  const qtyCallFn = Number(amount.value);\n  let currentDelay = firstDelay;\n  \n  for (let i = 0; i < qtyCallFn; i++) {\n    createPromise(i + 1, currentDelay);\n    \n    currentDelay += delayIncrement;\n  }\n\n  form.reset();\n}\n\nfunction createPromise(position, delay) {  \n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, `${delay}`);\n  });\n\n  promise.then(result => {\n    Notiflix.Notify.success(result);\n  });\n  \n  promise.catch(error => {\n    Notiflix.Notify.failure(error);\n  });\n};\n\nform.addEventListener('submit', onFormSubmit);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$button","$47d4ff9957288465$var$createPromise","position","delay1","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","addEventListener","evt","preventDefault","firstDelay","Number","value","delayIncrement","qtyCallFn","currentDelay","i","reset"],"version":3,"file":"03-promises.d979cde4.js.map"}